#!/bin/bash

# ----------------------------
# Variables and Logging
# ----------------------------
userid=$(id -u)
R="\e[31m"
G="\e[32m"
Y="\e[33m"
N="\e[0m"
folder="/var/log/mongodb-log"
script=$(basename "$0" | cut -d "." -f1)
log_file="$folder/$script.log"
mkdir -p "$folder"
directory=$PWD
mongodb_host=mongodb.suneel.shop

echo "Script started at: $(date)" | tee -a "$log_file"

# ----------------------------
# Check for sudo
# ----------------------------
if [ "$userid" -ne 0 ]; then
    echo "ERROR: Please run the script with sudo privileges" | tee -a "$log_file"
    exit 1
fi

# ----------------------------
# Validation function
# ----------------------------
validate() {
    if [ "$1" -ne 0 ]; then
        echo -e "$2 is...... $R failed $N" | tee -a "$log_file"
        exit 1
    else
        echo -e "$2 is...... $G success $N" | tee -a "$log_file"
    fi
}

# ----------------------------
# NodeJS Setup
# ----------------------------
dnf module disable nodejs -y &>>"$log_file"
validate $? "Disabling nodejs"

dnf module enable nodejs:20 -y &>>"$log_file"
validate $? "Enabling nodejs"

dnf install nodejs -y &>>"$log_file"
validate $? "Installing nodejs"

# ----------------------------
# Create roboshop user if missing
# ----------------------------
id roboshop &>>"$log_file"
if [ $? -ne 0 ]; then
    useradd --system --home /app --shell /sbin/nologin --comment "roboshop system user" roboshop
    validate $? "Creating system user"
else
    echo -e "User already exists ... $Y SKIPPING $N" | tee -a "$log_file"
fi

# ----------------------------
# Prepare app directory
# ----------------------------
mkdir -p /app &>>"$log_file"
validate $? "Creating app directory"

curl -o /tmp/catalogue.zip https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip &>>"$log_file"
validate $? "Downloading zip file"

cd /app 
validate $? "Changing directory to /app"

rm -rf /app/* &>>"$log_file"
validate $? "Removing existing code"

unzip /tmp/catalogue.zip &>>"$log_file"
validate $? "Unzipping app"

npm install &>>"$log_file"
validate $? "Installing dependencies"

# ----------------------------
# Systemd service setup
# ----------------------------
cp "$directory/catalogue.service" /etc/systemd/system/catalogue.service &>>"$log_file"
validate $? "Copying catalogue.service"

systemctl daemon-reload

systemctl enable catalogue &>>"$log_file"
validate $? "Enabling catalogue service"

systemctl start catalogue &>>"$log_file"
validate $? "Starting catalogue service"

# ----------------------------
# MongoDB client and repo
# ----------------------------
cp "$directory/mongo.repo" /etc/yum.repos.d/mongo.repo &>>"$log_file"
validate $? "Copying mongo repo"

dnf install mongodb-mongosh -y &>>"$log_file"
validate $? "Installing MongoDB client"

# ----------------------------
# Load catalogue DB if missing
# ----------------------------
# INDEX=$(mongosh "$mongodb_host" --quiet --eval "db.getMongo().getDBNames().indexOf('catalogue')" 2>/dev/null)
# INDEX=${INDEX:--1}   # Default -1 if empty

# if [ "$INDEX" -eq -1 ]; then
#     echo "Catalogue DB not found. Loading master data..." | tee -a "$log_file"
    mongosh --host "$mongodb_host" </app/db/master-data.js &>>"$log_file"
    validate $? "Load catalogue products"
# else
#     echo -e "Catalogue products already loaded ... $Y SKIPPING $N" | tee -a "$log_file"
# fi

# ----------------------------
# Restart catalogue service
# ----------------------------
systemctl restart catalogue &>>"$log_file"
validate $? "Restarted catalogue service"

echo "Script completed at: $(date)" | tee -a "$log_file"
